import os
#Settings steady state
Name = 'Budel' #puttenveld Budel, Schijf, Vlijmen
modelname ='Budel400'

Range = 3200 #m Distance from grid border to centre of wells 3200
GHBrange = 3200 
delr = 400
refineranges = {200:4}
steady_state = False
startdate = '2014-12-31 00:00:00'         #eerste is '2014-12-31 00:00:00', '2018-06-01 00:00:00' is grensdatum droogte budel
enddate = '2018-06-01 00:00:00'         #laatste '2023-12-30 22:00:00'


#Settings calibration
SensLayers = ['KIz2', 'KIk2','KIz3','KIk3','KIz4','KIz5']
CorLayers = {'KIz4' : 'KIz5'}
ghbCal = 'SensLayers' # 'obs', 'Single', None
KCal = True
Weighted = False
BadWells =['B57E0082_4', 'B57E0646_1', 'B57E0647_1','B57F0554_1'] #Budel

rule all: 
    input:
        os.path.join('..','Data','Preprocessed',f'BestParams_t_{modelname}.csv'),
        os.path.join('..','Data','Preprocessed',f'ModHead_{modelname}.csv')

rule forward_model_ss:
    input:
        'ForwardModelGen.py'
    output:
        f'../Results/{modelname}_ss/{modelname}_ss.hds'
    params:
        Name = Name,
        modelname = modelname,
        Range = Range,
        GHBrange = GHBrange,
        delr = delr,
        refineranges = refineranges,
        steady_state = True,
        startdate = startdate,
        enddate = enddate
    script:
       'ForwardModelGen.py'
       
rule forward_model_t:
    input:
        'ForwardModelGen.py',
    output:
        f'../Results/{modelname}_t/{modelname}_t.hds'
    params:
        Name = Name ,
        modelname = modelname,
        Range = Range,
        GHBrange = GHBrange,
        delr = delr,
        refineranges = refineranges,
        steady_state = False,
        startdate = startdate,
        enddate = enddate,
    script:
       'ForwardModelGen.py'

rule calibration_ss:
    input:
       f'../Results/{modelname}_t/{modelname}_ss.hds',
       'Sensitivity.py'
    params:
        Name = Name,
        modelname = modelname,
        SensLayers = SensLayers,
        CorLayers = CorLayers,
        ghbCal = ghbCal,
        KCal = KCal,
        Weighted = Weighted,
        BadWells = BadWells,
    output:
       os.path.join('..','Data','Preprocessed',f'ObsForCalibration_{modelname}_SS.csv'),
       os.path.join('..','Data','Preprocessed',f'BestParams_SS_{modelname}.csv')
    script:
       'Sensitivity.py'

rule calibration_t:
    input:
       'Calibration.py',
       os.path.join('..','Data','Preprocessed',f'BestParams_SS_{modelname}.csv'),
       f'../Results/{modelname}_t/{modelname}_t.hds'
    params:
        Name = Name,
        modelname = modelname,
        CorLayers = CorLayers,
    output:
        os.path.join('..','Data','Preprocessed',f'BestParams_t_{modelname}.csv'),
        os.path.join('..','Data','Preprocessed',f'ModHead_{modelname}.csv')
    script:
       'Calibration.py'